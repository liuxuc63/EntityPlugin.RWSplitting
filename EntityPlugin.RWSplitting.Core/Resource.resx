<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Check_AnyNotNull" xml:space="preserve">
    <value>传入的数组参数 "{0}" 中至少应存在一个元素的值不为 Null。</value>
  </data>
  <data name="Check_ArrayIsRangeTypes" xml:space="preserve">
    <value>传入的数组参数 "{0}" 中存在有某个元素所示的类型不是参数数组 "{1}" 中任意一个元素所示的类型或接口的子类或实现。</value>
  </data>
  <data name="Check_ArrayNotEmpty" xml:space="preserve">
    <value>传入的数组参数 "{0}" 值不能为 null 、空数组或空集合。</value>
  </data>
  <data name="Check_AssignableFrom" xml:space="preserve">
    <value>传入的参数 a:"{0}" 所表示的类型不可以从传入的另一参数 b:"{1}" 所表示的类型的实例分配。</value>
  </data>
  <data name="Check_EmptyOrEquals" xml:space="preserve">
    <value>传入的参数 "{0}" 的值只能为 Null、空字符串或者值 "{1}"。</value>
  </data>
  <data name="Check_Equals" xml:space="preserve">
    <value>传入的参数 "{0}" 的值只能为 "{1}"。</value>
  </data>
  <data name="Check_InhertOf" xml:space="preserve">
    <value>传入的参数 a:"{0}" 所表示的类型不是继承或等价于传入的另一参数 b:"{1}" 所表示的类型。</value>
  </data>
  <data name="Check_IsClass" xml:space="preserve">
    <value>传入的参数 "{0}" 所示的类型不是一个 .NET 类型定义（即，不是值类型或者接口）。</value>
  </data>
  <data name="Check_IsDefault" xml:space="preserve">
    <value>传入的参数 "{0}" 值不能其所代表的类型的默认值(class 类型为 null，struct 类型为初始化为零或 null 的每个结构成员)。</value>
  </data>
  <data name="Check_IsInterface" xml:space="preserve">
    <value>传入的参数 "{0}" 所示的类型不是一个接口类型（即，不是类或值类型）。</value>
  </data>
  <data name="Check_IsRangeTypes" xml:space="preserve">
    <value>传入的参数 "{0}" 所示的类型不是参数数组 "{1}" 中任意一个元素所示的类型或接口的子类或实现。</value>
  </data>
  <data name="Check_IsValueType" xml:space="preserve">
    <value>传入的参数 "{0}" 所示的类型不是一个值类型。</value>
  </data>
  <data name="Check_NotEmpty" xml:space="preserve">
    <value>传入的参数 "{0}" 值不能为 null、空或者空白字符串。</value>
  </data>
  <data name="Check_SubclassOf" xml:space="preserve">
    <value>传入的参数 a:"{0}" 所表示的类型不是从传入的另一参数 b:"{1}" 所表示的类型派生的。</value>
  </data>
  <data name="DbContextEntityTypeCheckErrorMessage" xml:space="preserve">
    <value>实体数据库上下文对象 "{0}" 中不存在定义了实体类型 "{1}" 的 Db&lt;TEntity&gt; 属性。</value>
  </data>
  <data name="NotDefinedDbProviderAttribute" xml:space="preserve">
    <value>当前工厂类型没有定义 DbProviderAttribute 属性。</value>
  </data>
  <data name="NotExistsAllowedDbProviderAttributeDatabaseFactory" xml:space="preserve">
    <value>当前应用程序运行环境中不存在标记了 DbProviderAttribute 特性 ProviderName 属性为 "{0}" 的 DatabaseFactory 子类。</value>
  </data>
  <data name="NotExistsAllowedDbProviderAttributeDbScriptParameterParser" xml:space="preserve">
    <value>无法找到标记了 DbProviderAttribute 为 "{0}" 的 DbScriptParameterParser 子类。</value>
  </data>
  <data name="NotExistsDatabaseConfig" xml:space="preserve">
    <value>当前应用程序配置文件中不存在任何数据库连接配置项。</value>
  </data>
  <data name="NotExistsSpecifiedProviderDatabaseConfig" xml:space="preserve">
    <value>当前应用程序配置文件中不存在数据库提供程序为 "{0}" 数据库连接配置项。</value>
  </data>
  <data name="UnregisteredProviderName" xml:space="preserve">
    <value>传入的参数 providerName: "{0}" 值无效，该数据库提供程序未注册。</value>
  </data>
</root>